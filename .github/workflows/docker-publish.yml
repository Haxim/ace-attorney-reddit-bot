name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: ace-attorney-reddit-bot

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build --file Dockerfile --build-arg streamable_username=${{ secrets.streamable_username }} --build-arg streamable_password=${{ secrets.streamable_password }} --build-arg reddit_client_id=${{ secrets.reddit_client_id }} --build-arg reddit_client_secret=${{ secrets.reddit_client_secret }} --build-arg reddit_refresh_token=${{ secrets.reddit_refresh_token }} --tag $IMAGE_NAME .

      - name: Log into registry
        run: docker login repo.treescale.com --username ${{ secrets.treescale_username }} --password ${{ secrets.treescale_password }}

      - name: Push image
        run: |
          IMAGE_ID=repo.treescale.com/${{ secrets.treescale_username }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
